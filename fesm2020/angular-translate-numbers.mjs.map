{"version":3,"file":"angular-translate-numbers.mjs","sources":["../../../projects/angular-translate-numbers/src/lib/helper/NumberConverterHelper.ts","../../../projects/angular-translate-numbers/src/lib/helper/interfaces.ts","../../../projects/angular-translate-numbers/src/lib/Pipe/translate-number-test.pipe.ts","../../../projects/angular-translate-numbers/src/lib/Service/translate-numbers.service.ts","../../../projects/angular-translate-numbers/src/lib/Pipe/translate-numbers.pipe.ts","../../../projects/angular-translate-numbers/src/lib/translate-numbers.module.ts","../../../projects/angular-translate-numbers/src/public-api.ts","../../../projects/angular-translate-numbers/src/angular-translate-numbers.ts"],"sourcesContent":["import { NumberType } from \"./interfaces\";\r\n\r\n\r\nexport class NumberConverterHelper {\r\n}\r\n","\r\n export  enum NumberType {\r\n  Digits = 1,\r\n  Arabic_Western = 1,\r\n  Latin = 1,\r\n  Cyrillic = 1,\r\n  Greek = 1,\r\n\r\n  Arabic = 2,\r\n  Arabic_Hindi = 2,\r\n  Arabic_Eastern = 2,\r\n\r\n  Persian = 3,\r\n  Pashto = 3,\r\n  Dari = 3,\r\n\r\n  Urdu = 4,\r\n  Shahmukhi = 4,\r\n\r\n  // Hindi = 5,\r\n\r\n  // Braille = 6,\r\n\r\n  Brahmi = 7,\r\n  Devanagari = 8,\r\n  Gujarati = 9,\r\n  Gurmukhi = 10,\r\n\r\n  Bengali = 11,\r\n  Assamese = 11,\r\n\r\n  Kannada = 12,\r\n  Odia = 13,\r\n  Malayalam = 14,\r\n  // Tamil = 15,\r\n  Telugu = 16,\r\n  Burmese = 17,\r\n  Tibetan = 18,\r\n  Mongolian = 19,\r\n  Sinhala = 20,\r\n  Khmer = 21,\r\n  Thai = 22,\r\n  Lao = 23,\r\n  Javanese = 24,\r\n  // EastAsia = 25,\r\n  // Greek_Modern = 26\r\n}\r\n\r\n// export interface IDigitTranslator {\r\n//   Translate(value: string, to: NumberType | undefined, from: NumberType | undefined): string;\r\n//   // Number(value: string, from: NumberType): number;\r\n// }\r\n\r\n// export class DigitTranslator {\r\n\r\n//   public Translate(value: string, to: NumberType | undefined = undefined, from: NumberType | undefined = undefined): string {\r\n//     return NumberConverterHelper.Translate(value, to, from);\r\n//   }\r\n\r\n//   // //TODO\r\n//   // public Number(value: string, from: NumberType): number {\r\n//   //   return NumberConverterHelper.Number(value, from);\r\n//   // }\r\n// }\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'translateNumberTest'\n})\nexport class TranslateNumberTestPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return value+\"tested\";\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { NumberType } from '../helper/interfaces';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslateNumbersService {\r\n  /**\r\n  * value : the value that has numbers and wanted to be translated\r\n  * to : the Numeral systems that the value will be translated to ---  Optional  --- default is Arabic / Arabic_Hindi / Arabic_Eastern /\r\n  * from : the Numeral systems that is the input is already in ---  Optional --- default is Digit s/ Arabic_Western / Latin / Cyrillic / Greek\r\n  */\r\n  public Translate(value: string, to: NumberType | undefined = undefined, from: NumberType | undefined = undefined) {\r\n    if (!to || to < 0 || to > 26) {\r\n      to = NumberType.Arabic;\r\n    }\r\n    if (!from || from < 0 || from > 26) {\r\n      from = NumberType.Digits;\r\n    }\r\n    return _TranslateToFrom(value, to, from);\r\n  }\r\n\r\n  public Number(value: string, from: NumberType): number {\r\n    let stringAsDigits = _TranslateToFrom(value, NumberType.Digits, from);\r\n    return Number(stringAsDigits)\r\n  }\r\n}\r\n\r\n\r\nexport const dicLTypesString: { [id: number]: string[]; } = {\r\n  1: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\r\n  // 6: ['⠚', '⠁', '⠃', '⠉', '⠙', '⠑', '⠋', '⠛', '⠓', '⠊'],\r\n  7: ['𑁦', '𑁧', '𑁨', '𑁩', '𑁪', '𑁫', '𑁬', '𑁭', '𑁮', '𑁯'],\r\n  8: ['०', '१', '२', '३', '४', '५', '६', '७', '८', '९'],\r\n  9: ['૦', '૧', '૨', '૩', '૪', '૫', '૬', '૭', '૮', '૯'],\r\n  10: ['੦', '੧', '੨', '੩', '੪', '੫', '੬', '੭', '੮', '੯'],\r\n  11: ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯'],\r\n  12: ['೦', '೧', '೨', '೩', '೪', '೫', '೬', '೭', '೮', '೯'],\r\n  13: ['୦', '୧', '୨', '୩', '୪', '୫', '୬', '୭', '୮', '୯'],\r\n  14: ['൦', '൧', '൨', '൩', '൪', '൫', '൬', '൭', '൮', '൯'],\r\n  // 15: ['0   ௧', '௨', '௩', '௪', '௫', '௬', '௭', '௮', '௯'],\r\n  16: ['౦', '౧', '౨', '౩', '౪', '౫', '౬', '౭', '౮', '౯'],\r\n  17: ['၀', '၁', '၂', '၃', '၄', '၅', '၆', '၇', '၈', '၉'],\r\n  18: ['༠', '༡', '༢', '༣', '༤', '༥', '༦', '༧', '༨', '༩'],\r\n  19: ['᠐', '᠑', '᠒', '᠓', '᠔', '᠕', '᠖', '᠗', '᠘', '᠙'],\r\n  20: ['෦', '෧', '෨', '෩', '෪', '෫', '෬', '෭', '෮', '෯'],\r\n  21: ['០', '១', '២', '៣', '៤', '៥', '៦', '៧', '៨', '៩'],\r\n  22: ['๐', '๑', '๒', '๓', '๔', '๕', '๖', '๗', '๘', '๙'],\r\n  23: ['໐', '໑', '໒', '໓', '໔', '໕', '໖', '໗', '໘', '໙'],\r\n  24: ['꧐', '꧑', '꧒', '꧓', '꧔', '꧕', '꧖', '꧗', '꧘', '꧙'],\r\n  2: ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'],\r\n  3: ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'],\r\n  4: ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'],\r\n  25: ['〇', '一', '二', '三', '四', '五', '六', '七', '八', '九'],\r\n  26: ['ο', 'Αʹ', 'Βʹ', 'Γʹ', 'Δʹ', 'Εʹ', 'Ϛʹ', 'Ζʹ', 'Ηʹ', 'Θʹ']\r\n};\r\n\r\n\r\nexport const dicLTypesSearch: { [id: number]: RegExp[]; } = {\r\n  1: [/0/g, /1/g, /2/g, /3/g, /4/g, /5/g, /6/g, /7/g, /8/g, /9/g],\r\n  // 6: [/⠚/g, /⠁/g, /⠃/g, /⠉/g, /⠙/g, /⠑/g, /⠋/g, /⠛/g, /⠓/g, /⠊/g],\r\n  7: [/𑁦/g, /𑁧/g, /𑁨/g, /𑁩/g, /𑁪/g, /𑁫/g, /𑁬/g, /𑁭/g, /𑁮/g, /𑁯/g],\r\n  8: [/०/g, /१/g, /२/g, /३/g, /४/g, /५/g, /६/g, /७/g, /८/g, /९/g],\r\n  9: [/૦/g, /૧/g, /૨/g, /૩/g, /૪/g, /૫/g, /૬/g, /૭/g, /૮/g, /૯/g],\r\n  10: [/੦/g, /੧/g, /੨/g, /੩/g, /੪/g, /੫/g, /੬/g, /੭/g, /੮/g, /੯/g],\r\n  11: [/০/g, /১/g, /২/g, /৩/g, /৪/g, /৫/g, /৬/g, /৭/g, /৮/g, /৯/g],\r\n  12: [/೦/g, /೧/g, /೨/g, /೩/g, /೪/g, /೫/g, /೬/g, /೭/g, /೮/g, /೯/g],\r\n  13: [/୦/g, /୧/g, /୨/g, /୩/g, /୪/g, /୫/g, /୬/g, /୭/g, /୮/g, /୯/g],\r\n  14: [/൦/g, /൧/g, /൨/g, /൩/g, /൪/g, /൫/g, /൬/g, /൭/g, /൮/g, /൯/g],\r\n  // 15: [/0   ௧/g, /௨/g, /௩/g, /௪/g, /௫/g, /௬/g, /௭/g, /௮/g, /௯/g],\r\n  16: [/౦/g, /౧/g, /౨/g, /౩/g, /౪/g, /౫/g, /౬/g, /౭/g, /౮/g, /౯/g],\r\n  17: [/၀/g, /၁/g, /၂/g, /၃/g, /၄/g, /၅/g, /၆/g, /၇/g, /၈/g, /၉/g],\r\n  18: [/༠/g, /༡/g, /༢/g, /༣/g, /༤/g, /༥/g, /༦/g, /༧/g, /༨/g, /༩/g],\r\n  19: [/᠐/g, /᠑/g, /᠒/g, /᠓/g, /᠔/g, /᠕/g, /᠖/g, /᠗/g, /᠘/g, /᠙/g],\r\n  20: [/෦/g, /෧/g, /෨/g, /෩/g, /෪/g, /෫/g, /෬/g, /෭/g, /෮/g, /෯/g],\r\n  21: [/០/g, /១/g, /២/g, /៣/g, /៤/g, /៥/g, /៦/g, /៧/g, /៨/g, /៩/g],\r\n  22: [/๐/g, /๑/g, /๒/g, /๓/g, /๔/g, /๕/g, /๖/g, /๗/g, /๘/g, /๙/g],\r\n  23: [/໐/g, /໑/g, /໒/g, /໓/g, /໔/g, /໕/g, /໖/g, /໗/g, /໘/g, /໙/g],\r\n  24: [/꧐/g, /꧑/g, /꧒/g, /꧓/g, /꧔/g, /꧕/g, /꧖/g, /꧗/g, /꧘/g, /꧙/g],\r\n  2: [/٠/g, /١/g, /٢/g, /٣/g, /٤/g, /٥/g, /٦/g, /٧/g, /٨/g, /٩/g],\r\n  3: [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g],\r\n  4: [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g],\r\n  25: [/〇/g, /一/g, /二/g, /三/g, /四/g, /五/g, /六/g, /七/g, /八/g, /九/g],\r\n  26: [/ο/g, /Αʹ/g, /Βʹ/g, /Γʹ/g, /Δʹ/g, /Εʹ/g, /Ϛʹ/g, /Ζʹ/g, /Ηʹ/g, /Θʹ/g],\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function _TranslateToFrom(value: string, to: NumberType, from: NumberType) {\r\n  value = value + \"\";\r\n  if (!to || to < 0 || to > 26) {\r\n    to = NumberType.Arabic;\r\n  }\r\n  if (!from || from < 0 || from > 26) {\r\n    from = NumberType.Digits;\r\n  }\r\n  let searches = dicLTypesSearch[from]\r\n  let replaces = dicLTypesString[to]\r\n  if (searches && replaces) {\r\n    for (let index = 0; index < searches.length; index++) {\r\n      let search = searches[index];\r\n      let replace = replaces[index];\r\n      if (search && replace)\r\n        value = value.replace(search, replace)\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\n\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { NumberType } from '../helper/interfaces';\r\nimport { _TranslateToFrom } from '../Service/translate-numbers.service';\r\n\r\n\r\n@Pipe({\r\n  name: 'translateNumbers',\r\n  pure: true\r\n})\r\n\r\nexport class TranslateNumbersPipe implements PipeTransform {\r\n  transform(value: unknown, ...args: NumberType[]): unknown {\r\n\r\n    let to: NumberType;\r\n    let from: NumberType;\r\n    if (args) {\r\n      to = args[0];\r\n      from = args[1];\r\n    } else {\r\n      to = NumberType.Arabic;\r\n      from = NumberType.Digits;\r\n    }\r\n    let newv = value + \"\";\r\n    return _TranslateToFrom(newv, to, from);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TranslateNumbersPipe } from './Pipe/translate-numbers.pipe';\r\nimport { TranslateNumbersService } from './Service/translate-numbers.service';\r\nimport { TranslateNumberTestPipe } from './Pipe/translate-number-test.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TranslateNumbersPipe,\r\n    TranslateNumberTestPipe,\r\n  ],\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    TranslateNumbersPipe,\r\n    TranslateNumberTestPipe,\r\n  ],\r\n  providers: [\r\n    TranslateNumbersPipe,\r\n    TranslateNumbersService\r\n],\r\n})\r\nexport class AngularTranslateNumbersModule {\r\n\r\n}\r\n","/*\n * Public API Surface of angular-translate-numbers\n */\n\nexport * from './lib/helper/NumberConverterHelper';\nexport * from './lib/helper/interfaces';\nexport * from './lib/Pipe/translate-number-test.pipe';\nexport * from './lib/Pipe/translate-numbers.pipe';\nexport * from './lib/Service/translate-numbers.service';\nexport * from './lib/translate-numbers.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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AE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;IAEtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACrD,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACrD,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACrD,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EAC/D;MAGW,eAAe,GAAgC;IAC1D,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;IAE/D,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACzE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC/D,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC/D,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAChE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAChE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAChE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAChE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;IAEhE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAChE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAChE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAChE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAChE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAChE,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IA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"}